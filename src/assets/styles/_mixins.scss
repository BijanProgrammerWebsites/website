@use "./colors";
@use "./typography";

/************** VARIABLES *************/
$defaults-button-ellipse: false;
$defaults-button-background--idle: transparent;
$defaults-button-color--idle: colors.$color-body-foreground;
$defaults-button-background--hover: same;
$defaults-button-color--hover: same;
$defaults-button-scale-transition: true;
$defaults-button-icon-margin: var(--density--normal);

$defaults-transition-duration: 0.1s;
$defaults-transition-scale: 1.02;

/*************** BUTTONS **************/
@mixin button-base(
  $ellipse: $defaults-button-ellipse,
  $background--idle: $defaults-button-background--idle,
  $color--idle: $defaults-button-color--idle,
  $background--hover: $defaults-button-background--hover,
  $color--hover: $defaults-button-color--hover,
  $scale-transition: $defaults-button-scale-transition
) {
  @include typography.typography-button;

  background: $background--idle;
  color: $color--idle;

  padding: var(--density--small) var(--density--normal);

  border: 0.1rem solid var(--color-border);

  @if $ellipse {
    @include ellipse;
  } @else {
    @include rounded-corners(small);
  }

  text-align: center;

  cursor: pointer;

  transform: scale(1);

  transition: all 0.1s ease-in-out;

  &:hover {
    @if $background--hover != same {
      background: $background--hover;
    }

    @if $color--hover != same {
      color: $color--hover;
    }

    @if $scale-transition != false {
      transform: scale(#{$defaults-transition-scale});
    }
  }
}

@mixin button-base--primary($scale-transition: $defaults-button-scale-transition) {
  @include button-base(
    $background--idle: colors.$color-primary,
    $color--idle: colors.$color-white,
    $background--hover: colors.$color-primary--darker,
    $scale-transition: $scale-transition
  );
}

@mixin button-base--success($scale-transition: $defaults-button-scale-transition) {
  @include button-base(
    $background--idle: colors.$color-success,
    $color--idle: colors.$color-white,
    $background--hover: colors.$color-success--darker,
    $scale-transition: $scale-transition
  );
}

@mixin button-base--danger($scale-transition: $defaults-button-scale-transition) {
  @include button-base(
    $background--idle: colors.$color-danger,
    $color--idle: colors.$color-white,
    $background--hover: colors.$color-danger--darker,
    $scale-transition: $scale-transition
  );
}

/**************** SHAPES **************/
@mixin rounded-corners($size) {
  @if $size == small {
    border-radius: var(--rounded-corner-border-radius--small);
  } @else if $size == large {
    border-radius: var(--rounded-corner-border-radius--large);
  }
}

@mixin ellipse {
  border-radius: 999rem;
}

/************* TRANSITIONS ************/
@mixin _wrap($wrapper) {
  @if $wrapper == null {
    @content;
  } @else {
    #{$wrapper} {
      @content;
    }
  }
}

@mixin change-on-hover(
  $property,
  $value--idle,
  $value--hover,
  $wrapper: null,
  $important: false,
  $duration: $defaults-transition-duration
) {
  @if $important {
    $important: '!important';
  } @else {
    $important: '';
  }

  @include _wrap($wrapper) {
    #{$property}: #{$value--idle} #{$important};

    transition: $property $duration ease-in-out;
  }

  &:hover {
    @include _wrap($wrapper) {
      #{$property}: #{$value--hover} #{$important};
    }
  }
}

@mixin grow-on-hover($scale: $defaults-transition-scale, $duration: $defaults-transition-duration) {
  transition: transform $duration ease-in-out;

  &:hover {
    transform: scale($scale, $scale);
  }
}
